<?php

namespace App\Http\Controllers;
use Cache;
use DB;
use Illuminate\Http\Request;
use Carbon\Carbon;
use App\Estudiante;
use App\TipoDoc;
use App\Departamento;

use Illuminate\Support\Facades\Crypt;
use App\AccionesRolesPermisos;
use Alert;
use Auth;

class ConfirmacionController extends Controller
{

    public function __construct()
    {
        $this->middleware('auth');
    }

    public function index(Request $request)
    {
        $this->actualizarSesion();
        //VERIFICA SI TIENE EL PERMISO
        if(!isset( session("permisosTotales")["estudiantes"]["permisos"]["inicio"]   ) ){  
            Auth::logout();
            return redirect('/login');
        }

        ////PERMISOS
        $roles = AccionesRolesPermisos::getRolesByUser(\Auth::User()->id);
        $permParam["modulo_alias"] = "estudiantes";
        $permParam["roles"] = $roles;
        $permisos = AccionesRolesPermisos::getPermisosByRolesController($permParam);

        ////FIN DE PERMISOS
        if($request->get('pag')){
            Cache::flush();
            session(['pag'=> $request->get('pag') ]);
            $pag = session('pag');
        }else{
            $pag = 15;
        }

        if(session('eventos_id') == false){
            return redirect()->route('caii.index');
        }

        $tipos = DB::table('estudiantes_tipo')->get();
        $modalidades = DB::table('tc_modalidades')->get();
        $grupos = DB::table('est_grupos')->whereNotNull('eventos_id')->get();
        
        Cache::flush();
        if($request->get('s')){
            
            $search = $request->get('s');

            $f_datos = Estudiante::join('estudiantes_act_detalle as de','estudiantes.dni_doc','=','de.estudiantes_id')
            ->where(function ($query) use ($search) {
                $query->where("estudiantes.dni_doc", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.nombres", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.ap_paterno", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.ap_materno", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.cargo", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.grupo", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.organizacion", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.accedio", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.email", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.email_labor", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.profesion", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.direccion", "LIKE", '%'.$search.'%')
                ->orWhere("estudiantes.celular", "LIKE", '%'.$search.'%');
            })
            ->where('de.estudiantes_tipo_id',1)
            ->where('de.eventos_id',session('eventos_id'))
            ->select('estudiantes.id','estudiantes.dni_doc','estudiantes.nombres','estudiantes.ap_paterno','estudiantes.ap_materno',
            'estudiantes.cargo','estudiantes.organizacion','estudiantes.profesion','de.dgrupo',
            'estudiantes.pais','estudiantes.region','estudiantes.codigo_cel','estudiantes.celular','estudiantes.email',
            'estudiantes.accedio','estudiantes.created_at','estudiantes.track','de.modalidad_id','de.estudiantes_tipo_id')

            ->orderBy('estudiantes.id', request('sorted', 'DESC'))
            ->paginate($pag);

        }else{
            
            $key = 'estudiantes_conf.page.'.request('page', 1);
            $f_datos = Cache::rememberForever($key, function() use ($pag){
                return Estudiante::join('estudiantes_act_detalle as de','estudiantes.dni_doc','=','de.estudiantes_id')
                        ->where('de.estudiantes_tipo_id',1)
                        ->where('de.eventos_id',session('eventos_id'))
                        ->select('estudiantes.id','estudiantes.dni_doc','estudiantes.nombres','estudiantes.ap_paterno','estudiantes.ap_materno','estudiantes.cargo','estudiantes.organizacion','estudiantes.profesion','de.dgrupo','estudiantes.pais','estudiantes.region','estudiantes.codigo_cel','estudiantes.celular','estudiantes.accedio','estudiantes.created_at','de.dtrack as track','estudiantes.email','de.modalidad_id','de.estudiantes_tipo_id')
                        ->orderBy('estudiantes.id', request('sorted', 'DESC'))
                        ->paginate($pag);
            });

        }
        return view('form_confirmacion.form_confirmacion', compact('f_datos', 'permisos','modalidades','tipos','grupos'));
    }


    public function create()
    {
        //
    }

    public function store(Request $request)
    {
        //
    }

    public function edit($id)
    {   
        $this->actualizarSesion();
        //VERIFICA SI TIENE EL PERMISO
        if(!isset( session("permisosTotales")["estudiantes"]["permisos"]["editar"]   ) ){  
            Auth::logout();
            return redirect('/login');
        }

        $eventos_id = session('eventos_id');

        $tipos = DB::table('estudiantes_tipo')->get();
        $tipo_doc = TipoDoc::all();
        $estudiantes_datos = DB::table('estudiantes')->where('id', $id)->first();
        //$distrito = $estudiantes_datos->ubigeo_ubigeo_id;
        $countrys = DB::table('country')->select('name','phonecode','nicename')->get();
        $grupos = DB::table('est_grupos')->get();

        $departamentos_datos = Departamento::select('ubigeo_id','nombre')
        ->whereIn('ubigeo_id', ['01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25'])
        ->get();

        //$estudiantes_datos = Estudiante::find($id);
        return view('form_confirmacion.edit',compact('estudiantes_datos','tipo_doc','departamentos_datos','grupos','tipos','countrys'));
    }


    public function update(Request $request, $id)
    {
       
        //Actualizamos 
        DB::table('estudiantes')->where('id',$id)->update([
            'dni_doc'=>mb_strtoupper($request->input('inputdni')),
             'ap_paterno'=>mb_strtoupper($request->input('inputApe_pat')),
             'ap_materno'=>mb_strtoupper($request->input('inputApe_mat')),
             'nombres'=>mb_strtoupper($request->input('inputNombres')),
             'fecha_nac'=>mb_strtoupper($request->input('inputFechaNac')),
             'grupo'=>mb_strtoupper($request->input('grupo')),
             'cargo'=>mb_strtoupper($request->input('inputCargo')),
             'organizacion'=>mb_strtoupper($request->input('inputOrganizacion')),
             'profesion'=>mb_strtoupper($request->input('inputProfesion')),
             'direccion'=>mb_strtoupper($request->input('inputDireccion')),
             'telefono'=>mb_strtoupper($request->input('inputTelefono')),
             'telefono_labor'=>mb_strtoupper($request->input('inputTelefono_2')),
             'codigo_cel'=>$request->input('codigo_cel'),
             'celular'=>mb_strtoupper($request->input('inputCelular')),
             'email'=>$request->input('inputEmail'),
             'email_labor'=>$request->input('inputEmail_2'),
             'sexo'=>$request->input('cboSexo'),
             'created_at'=>Carbon::now(),
             'updated_at'=>Carbon::now(),
             'estado'=>$request->input('cboEstado'),
             'accedio'=>$request->input('accedio'),
             'track'=>$request->input('track'),
             'pais'=>$request->input('pais'),
             'region'=>$request->input('region'),
             
             'tipo_documento_documento_id'=>$request->input('cboTipDoc'),
             'tipo_id'=>$request->input('tipo_id'),
        ]);

        $existe_det = DB::table('estudiantes_act_detalle')
                        ->where('eventos_id', session('eventos_id'))
                        ->where('estudiantes_id', $request->input('inputdni'))
                        ->update([
                            'dtrack'=> mb_strtoupper($request->input('track')),
                        ]);

        

        Cache::flush();

        alert()->success('Registro actualizado.','Mensaje Satisfactorio');
        //Redireccionamos
        //return redirect()->route('form_confirmacion.index');
        return redirect()->back();
    }


    public function show($id)
    {
        $this->actualizarSesion();
        //VERIFICA SI TIENE EL PERMISO
        if(!isset( session("permisosTotales")["estudiantes"]["permisos"]["mostrar"]   ) ){  
            Auth::logout();
            return redirect('/login');
        }

        $tipo_doc = TipoDoc::all();
        //$estudiantes_datos = DB::table('estudiantes')->where('id', $id)->first();
        //$order = Order::findOrFail($orderId);
        $estudiantes_datos = Estudiante::findOrFail($id);

        $distrito = $estudiantes_datos->ubigeo_ubigeo_id;

        $dis = substr($distrito,0,4);

        $distritos_datos = DB::select('select * from ubigeos where ubigeo_id like :id and ubigeo_id <> :id2', ['id' => $dis.'%','id2' => $dis]);

        $prov = substr($distrito,0,2);
        $provincias_datos = DB::select('select * from ubigeos where ubigeo_id like :id and ubigeo_id <> :id2 and CHARACTER_LENGTH(ubigeo_id)= :id3', ['id' => $prov.'%','id2' => $prov,'id3' => 4]);

        $departamentos_datos = Departamento::select('ubigeo_id','nombre')
        ->whereIn('ubigeo_id', ['01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25'])
        ->get();

        return view('form_confirmacion.show',compact('estudiantes_datos','tipo_doc','departamentos_datos','provincias_datos','distritos_datos','prov','dis'));
    }

    


    public function eliminarVarios(Request $request){

        /*$this->actualizarSesion();
        //VERIFICA SI TIENE EL PERMISO
        if(!isset( session("permisosTotales")["estudiantes"]["permisos"]["eliminar"]   ) ){  
            Auth::logout();
            return redirect('/login');
        }*/
        // Enviar Confirmación - Pre-Inscritos
        $seleccion_si = $request->selection_si;
        $seleccion_no = $request->selection_no;
        $error = "";
        
        $i = 0;
        $j = 0;

        if(!is_null($request->selection_si)){

            foreach ($seleccion_si as $value) {
                $i++;
                
                $estudiante = Estudiante::join('estudiantes_act_detalle as de','estudiantes.dni_doc','=','de.estudiantes_id')
                                ->where('estudiantes.id', $value)
                                ->where('de.eventos_id',session('eventos_id'))
                                ->first();
                
                $dni = $estudiante->dni_doc;
                $nom = $estudiante->nombres .' '.$estudiante->ap_paterno;
                $email = $estudiante->email;
                #DB::table('eventos as e')
                $rs_datos = \App\Evento::join('e_plantillas as p', 'eventos.id', '=', 'p.eventos_id')
                            ->join('e_formularios as f', 'eventos.id','=','f.eventos_id')
                            ->join('e_plantillas_virtual as pv', 'eventos.id','=','pv.eventos_id')
                            ->where('eventos.id',session('eventos_id'))
                            ->orderBy('eventos.id', 'desc')
                            ->first();
                
                if($rs_datos){
                    $evento_id = $rs_datos->id;
                    $fechai_evento = $rs_datos->fechai_evento;
                    $fechaf_evento = $rs_datos->fechaf_evento;
                }else{
                    alert()->success('Ingrese a un evento','Alerta');
                    return redirect()->route('caii.index');
                }

                
                $existe_det = DB::table('estudiantes_act_detalle')
                        ->where('eventos_id', session('eventos_id'))
                        ->where('estudiantes_id', $dni)
                        ->update([
                            'dtrack'=> 'SI',
                        ]);

               
                    DB::table('estudiantes')->where('id',$value)->update([
                        //'tipo_id' => 4,  APROBADO
                        'track'=>'SI'
                    ]);

                    $flujo_ejecucion = 'INVITACION';
                    #$asunto = '[INVITACIÓN] '.$rs_datos->nombre_evento;
                    $id_plantilla = session('eventos_id'); //ID EVENTO
                    $plant_confirmacion = $rs_datos->p_conf_inscripcion;
                    $plant_confirmacion_2 = $rs_datos->p_conf_inscripcion_2;

                    $celular = $estudiante->codigo_cel.$estudiante->celular;
                    $dni = $estudiante->dni_doc;
                    $nom = $estudiante->nombres .' '.$estudiante->ap_paterno;
                    $email = $estudiante->email;
                    
                    $asunto='';
                    // falta probar x msg y whats
                    if($rs_datos->p_conf_inscripcion_email == 1){
                        
                        $msg_cel  = "";
                        $from_name  = $rs_datos->Email->nombre;
                        $from_email = $rs_datos->Email->email;

                        // PRESENCIAL #$estudiante->Modalidad->modalidad=='PRESENCIAL'
                        if($estudiante->modalidad_id==1){
                            $asunto = $rs_datos->p_conf_inscripcion_asunto;
                            $msg_text = $rs_datos->p_conf_inscripcion;// plantila email
                        }else{
                            // VIRTUAL
                            $asunto = $rs_datos->p_conf_inscripcion_asunto_v;
                            $msg_text = $rs_datos->p_conf_inscripcion_v;// plantila email
                        }

                        if($email != ""){

                            DB::table('historia_email')->insert([
                                'tipo'              => 'EMAIL',
                                'fecha'             => Carbon::now(),
                                'estudiante_id'     => $dni,
                                'plantillaemail_id' => $id_plantilla,
                                'flujo_ejecucion'   => $flujo_ejecucion,
                                'eventos_id'        => $id_plantilla,
                                'fecha_envio'       => '2000-01-01',
                                'asunto'            => $asunto,
                                'nombres'           => $nom,
                                'email'             => $email,
                                'celular'           => "",//$celular,
                                'msg_text'          => $msg_text,
                                'msg_cel'           => $msg_cel,
                                'from_nombre'       => $from_name,
                                'from_email'        => $from_email,
                                'created_at'        => Carbon::now(),
                                'updated_at'        => Carbon::now()
                            ]);

                        }

                    
                    }else{
                        // no inserta en la tb historia_email
                        $error .= 'No se envio el EMAIL porque no esta habilitado en la configuración del EVENTO.<br>';

                    }

                    // MSG WHATS 

                    if($rs_datos->p_conf_inscripcion_msg == 1){
                        $msg_text = '';
                        // PRESENCIAL #$estudiante->Modalidad->modalidad=='PRESENCIAL'
                        if($estudiante->modalidad_id==1){
                            $asunto = $rs_datos->p_conf_inscripcion_asunto;
                            $msg_cel = $rs_datos->p_conf_inscripcion_2;// plantila msg
                        }else{
                            // VIRTUAL
                            $asunto = $rs_datos->p_conf_inscripcion_asunto_v;
                            $msg_cel = $rs_datos->p_conf_inscripcion_2_v;// plantila msg
                        }

                        if($celular != "" && strlen($estudiante->celular)>= 9){ 
                    
                            DB::table('historia_email')->insert([
                                'tipo'              =>  'WHATS',
                                'fecha'             => Carbon::now(),
                                'estudiante_id'     => $dni,
                                'plantillaemail_id' => $id_plantilla,
                                'flujo_ejecucion'   => $flujo_ejecucion,
                                'eventos_id'        => $id_plantilla,
                                'fecha_envio'       => '2000-01-01',
                                'asunto'            => $asunto,
                                'nombres'           => $nom,
                                'email'             => $email,
                                'celular'           => $celular,
                                'msg_text'          => $msg_text,
                                'msg_cel'           => $msg_cel,
                                'created_at'        => Carbon::now(),
                                'updated_at'        => Carbon::now()
                            ]);
                        }
                        

                    }else{
                        $error .= 'No se envio el whatsapp porque no esta habilitado en la configuración del EVENTO.<br>';

                    }

                    $rs_datos   = "";
                    $estudiante = "";

            }
            //end seleccion_SI

        }
        if(!is_null($request->selection_no)){

            foreach ($seleccion_no as $value) {
                $j++;
                
                #$estudiante = Estudiante::where('id', $value)->first();
                $estudiante = Estudiante::join('estudiantes_act_detalle as de','de.estudiantes_id','=','estudiantes.dni_doc')
                            #->where('de.estudiantes_id',session('user'))
                            ->where('estudiantes.id',$value)
                            #->where('de.eventos_id',session('eventos_id'))
                            ->first();

                $dni = $estudiante->dni_doc;
                $nom = $estudiante->nombres .' '.$estudiante->ap_paterno;
                $email = $estudiante->email;
                
                $existePlantVirtual = DB::table('e_plantillas_virtual')->where('eventos_id',session('eventos_id'))->count();
                if($existePlantVirtual==1){
                    $rs_datos = \App\Evento::join('e_plantillas as p', 'eventos.id', '=', 'p.eventos_id')
                                    ->join('e_formularios as f', 'eventos.id','=','f.eventos_id')
                                    ->join('e_plantillas_virtual as vir', 'eventos.id','=','vir.eventos_id')
                                    ->where('eventos.id',session('eventos_id'))
                                    ->orderBy('eventos.id', 'desc')
                                    ->first();
                }else{
                    $rs_datos = \App\Evento::join('e_plantillas as p', 'eventos.id', '=', 'p.eventos_id')
                                    ->join('e_formularios as f', 'eventos.id','=','f.eventos_id')
                                    ->where('eventos.id',session('eventos_id'))
                                    ->orderBy('eventos.id', 'desc')
                                    ->first();
                    
                }

                if($rs_datos){
                    $evento_id = $rs_datos->id;
                    $fechai_evento = $rs_datos->fechai_evento;
                    $fechaf_evento = $rs_datos->fechaf_evento;
                }else{
                    alert()->success('Ingrese a un evento','Alerta');
                    return redirect()->route('caii.index');
                }

            
                    DB::table('estudiantes')->where('id',$value)->update([
                        'track'=>'NO'
                        //'tipo_id' => 1  NO-APROBADO
                    ]);
                    DB::table('users')->where('name',$dni)->update([
                        'estado'=>0
                        //'tipo_id' => 1  NO-APROBADO
                    ]);

                    $existe_det = DB::table('estudiantes_act_detalle')
                        ->where('eventos_id', session('eventos_id'))
                        ->where('estudiantes_id', $dni)
                        ->update([
                            'dtrack'=> 'NO',
                        ]);

                    DB::table('historial_e')->insert([
                     'est_id'=>$dni,
                     'est_tipo_id'=> 1,
                     'a_id'=> 0,
                     'eve_id'=> session('eventos_id'),
                     'eve_tipo_id'=> 1,
                     'aceptados_pre'=> 0,
                     'flag'=> 'D', //D: DENAGADO
                     //'aceptado_foro'=> 'SI',
                     'fecha_reg'=> Carbon::now(),
                     'fecha_inicial'=> $fechai_evento, // fecha ini d evento y foro 
                     'fecha_final'=> $fechaf_evento // fecha fin d evento y foro

                    ]);

                    // envio email
                    $modalidad = $estudiante->modalidad_id;
                    $from_name  = $rs_datos->Email->nombre;
                    $from_email = $rs_datos->Email->email;
                    #dd($dni,$nom,$estudiante->modalidad_id,$from_name,$from_email);
                    
                    $celular = $estudiante->celular;
                    $codigo_celular = $estudiante->codigo_cel;
            
                    $email = $estudiante->email;
                    $dni = $estudiante->dni_doc;
                    $nombres_ape = $estudiante->nombres ." ".$estudiante->ap_paterno;
                    $nombres_apat = $estudiante->ap_paterno;
                    $nombres_amat = $estudiante->ap_materno;
                    
                    // PRESENCIAL 
                    if($modalidad==1){
                        $asunto = $rs_datos->p_negacion_asunto;
                        $msg_text = $rs_datos->p_negacion;// plantila email
                        $msg_cel = $rs_datos->p_negacion_2;//msg what
                    }else{
                        // VIRTUAL
                        $asunto = $rs_datos->p_negacion_asunto_v;
                        $msg_text = $rs_datos->p_negacion_v;// plantila email
                        $msg_cel = $rs_datos->p_negacion_2_v;// msg what
                    }
                    $confirm_email = $rs_datos->p_negacion_email;
                    $confirm_msg   = $rs_datos->p_negacion_msg;

                    $flujo_ejecucion = 'NOINVITADO';
                    $asunto = '[LO SENTIMOS] '.$rs_datos->nombre_evento;
                    $id_plantilla = session('eventos_id'); //ID EVENTO
                    $plant_confirmacion = $rs_datos->p_negacion;
                    $plant_confirmacion_2 = $rs_datos->p_negacion_2;

                    $celular = $estudiante->codigo_cel.$estudiante->celular;
                    $dni = $estudiante->dni_doc;
                    $nom = $estudiante->nombres .' '.$estudiante->ap_paterno;
                    $email = $estudiante->email;
                   
                    $msg_text = $rs_datos->p_negacion;// plantila emailp_preregistro_2
                    $msg_cel  = $rs_datos->p_negacion_2;// plantila whats
                        
                    // falta probar x msg y whats
                    
                    #if($rs_datos->confirm_email == 1){
                    if($confirm_email == 1){

                        if($email != ""){

                            DB::table('historia_email')->insert([
                                'tipo'              =>  'EMAIL',
                                'fecha'             => Carbon::now(),
                                'estudiante_id'     => $dni,
                                'plantillaemail_id' => $id_plantilla,
                                'flujo_ejecucion'   => $flujo_ejecucion,
                                'eventos_id'        => $id_plantilla,
                                'fecha_envio'       => '2000-01-01',
                                'asunto'            => $asunto,
                                'nombres'           => $nom,
                                'email'             => $email,
                                'celular'           => '',//$celular
                                'msg_text'          => $msg_text,
                                'msg_cel'           => '',//$msg_cel,
                                'created_at'        => Carbon::now(),
                                'updated_at'        => Carbon::now(),
                                'from_nombre'       => $from_name,
                                'from_email'        => $from_email,
                            ]);

                        }

                    
                    }else{
                        // no inserta en la tb historia_email
                        $error .= 'No se envio el email porque no esta habilitado en la configuración del EVENTO.<br>';

                    }

                    // MSG WHATS 
                    
                    if($confirm_msg == 1){

                        if($celular != "" && strlen($estudiante->celular)>= 9){ 
                    
                            DB::table('historia_email')->insert([
                                'tipo'              =>  'WHATS',
                                'fecha'             => Carbon::now(),
                                'estudiante_id'     => $dni,
                                'plantillaemail_id' => $id_plantilla,
                                'flujo_ejecucion'   => $flujo_ejecucion,
                                'eventos_id'        => $id_plantilla,
                                'fecha_envio'       => '2000-01-01',
                                'asunto'            => $asunto,
                                'nombres'           => $nom,
                                'email'             => $email,
                                'celular'           => $celular,
                                'msg_text'          => '',//$msg_text
                                'msg_cel'           => $msg_cel,
                                'created_at'        => Carbon::now(),
                                'updated_at'        => Carbon::now()
                            ]);
                        }
                        

                    }else{
                        $error .= 'No se envio el whatsapp porque no esta habilitado en la configuración del EVENTO.<br>';

                    }

                    $rs_datos = "";
                    $estudiante = "";

            }
            
        }

        Cache::flush();

        
        return redirect()->back()->with('si', 'Se enviarón exitosamente '.$i. ' correos.')->with('no', 'Se enviarón exitosamente '.$j. ' correos.')->with('error', $error);
       
    }
}
